{
    "terminal.integrated.shell.windows": "C:\\Windows\\System32\\cmd.exe",
    "files.associations": {
        "*.rmd": "markdown"
    },
    // system
    "breadcrumbs.enabled": false,
    "workbench.activityBar.visible": true,
    "workbench.settings.openDefaultSettings": true,
    "workbench.settings.editor": "json",
    "workbench.iconTheme": "vs-seti",
    "workbench.colorTheme": "Default Dark+",
    "editor.tabSize": 4,
    // Controls whether `editor.tabSize#` and `#editor.insertSpaces` will be automatically detected when a file is opened based on the file contents.
    "editor.detectIndentation": false,
    // Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when `editor.detectIndentation` is on.
    "editor.insertSpaces": true,
    // Format a file on save. A formatter must be available, the file must not be saved after delay, and the editor must not be shutting down.
    "editor.formatOnSave": true,
    // python
    "python.pythonPath": "C:\\Users\\james\\Anaconda3\\python.exe",
    // Provider for formatting. Possible options include 'autopep8', 'black', and 'yapf'.
    "python.formatting.provider": "autopep8",
    "python.linting.pep8Enabled": true,
    // 501 - line length
    "python.linting.pep8Args": [
        "--ignore=E501",
        "--verbose"
    ],
    //pytest
    // Enable testing using pytest.
    "python.testing.pytestEnabled": true,
    // Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.
    "python.testing.pytestPath": "pytest",
    // Arguments passed in. Each argument is a separate item in the array.
    "python.testing.unittestArgs": [
        "-v",
        "-s",
        ".",
        "-p",
        "*test*.py"
    ],
    // code-runner.
    "code-runner.executorMap": {
        "python": "$pythonPath -u $fullFileName",
    },
    "code-runner.clearPreviousOutput": true,
    "code-runner.showExecutionMessage": false,
    "code-runner.runInTerminal": true
}